feat: Implement Multi-MCP Health Checks and React Chatbot Integration

This commit introduces robust health monitoring for Multi-MCP servers and integrates the React chatbot with the new Multi-MCP Platform API.

Key changes include:

- **Enhanced MCP Health Checks**: Replaced simulated health checks in `fastapi_server/server_registry.py` with actual MCP connectivity tests using `httpx` for `streamable-http` transport. This ensures accurate health reporting for connected MCP servers.
- **React Chatbot Platform Integration**: Migrated the React chatbot (`react-chatbot/src/hooks/useChat.ts` and `react-chatbot/src/services/api.ts`) to use the new `/v2/chat` Multi-MCP Platform endpoint. This enables the chatbot to leverage the orchestrated multi-server capabilities.
- **Product Metadata Server Health Endpoint**: Added a dedicated `/health` endpoint to `src/talk_2_tables_mcp/product_metadata_server.py` for better monitoring and integration with the Multi-MCP Platform's health checks.
- **Test Data Expansion**: Added new product entries to `data/products.json` to support testing of product lookup functionalities within the multi-server environment.
- **Documentation Updates**: Updated `.dev-resources/context/session-scratchpad.md` to reflect the progress on health checks and the identification of a critical routing logic issue that needs further investigation.

The health monitoring is now fully operational, providing accurate status for both Database and Product MCP servers. However, a critical issue was identified where the intent detection logic is not correctly utilizing YAML routing rules, preventing the Product MCP server from being engaged for product-related queries. This will be addressed in subsequent work.